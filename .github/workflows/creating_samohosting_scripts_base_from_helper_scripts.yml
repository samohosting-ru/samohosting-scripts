name: creating_samohosting_scripts_base_from_helper_scripts

# on:
#   schedule:
#     - cron: '0 2 * * *'  # Run every day at 2 AM UTC
#   push:
#     branches:
#       - main

jobs:
  sync-repo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout your repository
      uses: actions/checkout@v3
   
    - name: Set up Git and add upstream
      run: |
        git config user.name 'samohosting'
        git config user.email 'email@samohosting.ru'
        git remote add upstream https://github.com/community-scripts/ProxmoxVE

    # - name: Clone target repository
    #   run: |
    #     git clone https://github.com/community-scripts/ProxmoxVE temp_repo

    - name: Create or update dev branch
      run: |
        # Check if the dev branch exists, if not create it
        git checkout -b dev || echo "dev branch already is there, switching to dev branch"
        git checkout dev
        
    - name: Fetch the latest changes from the remote(upstream)
      run: |   
        # Fetch the latest changes from the remote(upstream)
        git fetch upstream
        
    - name: Merge upstream changes into dev branch
      run: |
        # Merge fetched updates with your current dev branch
        git merge dev
        
        # # Copy changes from target repo to your dev branch
        # cp -r temp_repo/* .
    
    # - name: Add and commit changes and push to github dev branch
    #   run: |
    #     # Add and commit changes and push to github dev branch
    #     git config user.name --global 'samohosting'
    #     git config user.email --global 'email@samohosting.ru'
    #     git add .
    #     if git diff --cached --exit-code; then
    #       echo "No changes to commit."
    #     else
    #       git commit -m "Sync with upstream: $(date +'%Y-%m-%d %H:%M:%S')"
    #       git push dev https://github.com/samohosting-ru/samohosting-scripts
    #     fi

    # - name: Check for changes in main branch
    #   run: |
    #     # Fetch the latest changes from both repositories
    #     git fetch dev
    #     git fetch origin/dev

    - name: Check for changes in main branch
      run: |    
        # Compare the main branches
        if ! git diff --exit-code dev origin/dev; then
        echo "Changes detected in upstream main(local dev) branch."
          
        # Merge changes into dev branch
          git checkout dev
          # git merge https://github.com/samohosting-ru/samohosting-scripts/tree/dev -m "Merge upstream changes: $(date +'%Y-%m-%d %H:%M:%S')" --no-commit --no-ff --allow-unrelated-histories
          git push dev origin/dev
        else
          echo "No changes detected in upstream main branch."
        fi

    # - name: Notify on changes
    #   if: always()
    #   run: |
    #     # Check if there were any changes and send a notification
    #     if [[ $(git log --oneline -1) =~ "Sync with upstream" || $(git log --oneline -1) =~ "Merge upstream changes" ]]; then
    #       curl -X POST -H 'Content-type: application/json' --data '{"text":"Changes have been synced to the dev branch."}' https://hooks.slack.com/services/your/webhook/url
    #     fi
